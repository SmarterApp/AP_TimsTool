package org.opentestsystem.ap.timstool.configuration;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.timstool.command.Command;
import org.opentestsystem.ap.timstool.command.CommandEnum;
import org.opentestsystem.ap.timstool.command.CreateItemContentPackageCommand;
import org.opentestsystem.ap.timstool.command.CreateTestPackageCommand;
import org.opentestsystem.ap.timstool.command.GetItemContentPackageCommand;
import org.opentestsystem.ap.timstool.command.GetItemContentPackageStatusCommand;
import org.opentestsystem.ap.timstool.commandline.ToolCommands;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.HashMap;
import java.util.Map;

/**
 * Inject the command implementation classes where they are the values of a map.  The map is keyed off the name of the
 * command.
 */
@Slf4j
@Configuration
public class ToolCommandConfiguration {

    private final CreateTestPackageCommand createTestPackageCommand;

    private final CreateItemContentPackageCommand createItemContentPackageCommand;

    private final GetItemContentPackageStatusCommand getItemContentPackageStatusCommand;

    private final GetItemContentPackageCommand getItemContentPackageCommand;

    public ToolCommandConfiguration(CreateTestPackageCommand createTestPackageCommand,
                                    CreateItemContentPackageCommand createItemContentPackageCommand,
                                    GetItemContentPackageStatusCommand getItemContentPackageStatusCommand,
                                    GetItemContentPackageCommand getItemContentPackageCommand) {
        this.createTestPackageCommand = createTestPackageCommand;
        this.createItemContentPackageCommand = createItemContentPackageCommand;
        this.getItemContentPackageStatusCommand = getItemContentPackageStatusCommand;
        this.getItemContentPackageCommand = getItemContentPackageCommand;
    }

    @Bean
    @ConditionalOnMissingBean
    public ToolCommands toolCommandLineCommands() {
        log.debug("Create bean toolCommandLineCommands");

        Map<CommandEnum, Command> commands = new HashMap<>();
        commands.put(CommandEnum.CreateTestPackage, this.createTestPackageCommand);
        commands.put(CommandEnum.CreateItemContentPackage, this.createItemContentPackageCommand);
        commands.put(CommandEnum.GetItemContentStatusCommand, this.getItemContentPackageStatusCommand);
        commands.put(CommandEnum.GetItemContentCommand, this.getItemContentPackageCommand);

        return new ToolCommands(commands);
    }

}
