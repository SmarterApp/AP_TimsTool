package org.opentestsystem.ap.timstool.commands;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.timstool.TimsToolCommand;
import org.opentestsystem.ap.timstool.TimsToolCommandLine;
import org.opentestsystem.ap.timstool.TimsToolProperties;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.client.RestTemplate;

import java.nio.file.Path;
import java.nio.file.Paths;

@Slf4j
@Component
public class CreateTestPackageCmd implements TimsToolCommand {

    private final TimsToolProperties properties;

    private final RestTemplate restTemplate;

    public CreateTestPackageCmd(TimsToolProperties properties, RestTemplateBuilder restTemplateBuilder) {
        this.properties = properties;
        this.restTemplate = restTemplateBuilder.rootUri(properties.getApiGatewayUrl()).build();
    }

    // ------------------------------------------------------------------------

    @Override
    public void execute(TimsToolCommandLine commandLine) {
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.MULTIPART_FORM_DATA);

        MultiValueMap<String, Object> body = new LinkedMultiValueMap<>();
        body.add("file", this.getInputFile(commandLine));
    }

    // ------------------------------------------------------------------------

    private Resource getInputFile(TimsToolCommandLine commandLine) {
        Path inputFile = Paths.get(commandLine.getInputFile());
        return new FileSystemResource(inputFile.toFile());
    }
}

